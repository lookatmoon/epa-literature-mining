# -*- coding: utf-8 -*-
"""graph.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y_tTj1iXaA73Wunk0Dj9T3MlJ7nxSz9K
"""

import pandas as pd
import numpy as np
import matplotlib as mpl 
import matplotlib.pyplot as plt

#the file 'percentile_list_active_learning' are available here: https://drive.google.com/drive/folders/1wkQN4_byG8uVf6AduA8nsC3QHN5ZOXH6?usp=sharing

df = pd.read_csv("percentile_list_active_learning.csv")

df["wss al us"] = df["wss al us"]*100
df["wss al rs"] = df["wss al rs"]*100
df["wss al with knowledge transfer us"] = df["wss al with knowledge transfer us"]*100
df["wss al with knowledge transfer rs"] = df["wss al with knowledge transfer rs"]*100

df

figure = plt.figure() 
axes1 = figure.add_subplot(1,1,1)  
axes1.plot(df["# labeled articles added"],df["wss al us"],label = 'US', marker='*') 
axes1.plot(df["# labeled articles added"],df["wss al rs"], label = 'RS', marker='p')
axes1.plot(df["# labeled articles added"],df["wss al with knowledge transfer us"], label = 'knowledge transfer + US', marker='o')
axes1.plot(df["# labeled articles added"],df["wss al with knowledge transfer rs"], label = 'knowledge transfer + RS', marker='s')
# axes1.set_ylim(ymin=0)
plt.xlabel("# of labeled references in 2020 ozone ISA")
plt.ylabel("WSS@95%")
plt.yticks(np.arange(60, 80, step=5))


# SMALL_SIZE = 8
# MEDIUM_SIZE = 10
BIGGER_SIZE = 14
plt.rc('font', size=BIGGER_SIZE)          # controls default text sizes
plt.rc('axes', titlesize=BIGGER_SIZE)     # fontsize of the axes title
plt.rc('axes', labelsize=BIGGER_SIZE)    # fontsize of the x and y labels
plt.rc('xtick', labelsize=BIGGER_SIZE)    # fontsize of the tick labels
plt.rc('ytick', labelsize=BIGGER_SIZE)    # fontsize of the tick labels
plt.rc('legend', fontsize=BIGGER_SIZE)    # legend fontsize
plt.rc('figure', titlesize=BIGGER_SIZE)
plt.tight_layout()
axes1.legend()

# ax = plt.gca()
# ax.spines['top'].set_color('none')
# ax.spines['right'].set_color('none')
# ax.xaxis.set_ticks_position('bottom')
# ax.yaxis.set_ticks_position('left')
# # ax.spines['bottom'].set_position(('data',0))
# # ax.spines['left'].set_position(('data',0))
# figure.show()
plt.savefig("al.pdf", format="pdf", bbox_inches="tight")